name: CI/CD Pipeline

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build -- --output-path=./dist/out

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH to server and deploy Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: 22
          env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true
          script: |
            CONTAINER_NAME=angular-app  # Define container name as a variable
            echo "$SERVER_PASSWORD" | ssh-keygen -f /tmp/ssh_key -N ""
            chmod 600 /tmp/ssh_key
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            docker pull ${{ secrets.DOCKER_REGISTRY_URL }}/${{ github.event.repository.name }}
            docker run -d -p 80:80 --name $CONTAINER_NAME ${{ secrets.DOCKER_REGISTRY_URL }}/${{ github.event.repository.name }}
